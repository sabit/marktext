name: Release

on:
  push:
    branches:
      - 'release-v*'

jobs:
  windows:
    runs-on: windows-latest
    timeout-minutes: 45

    env:
      MARKTEXT_IS_STABLE: 1
      MARKTEXT_EXIT_ON_ERROR: 1

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure setuptools and distutils
        run: |
          python -m pip install --upgrade pip setuptools

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Set GYP_MSVS_VERSION
        run: echo "GYP_MSVS_VERSION=2019" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Install latest node-gyp globally
        run: npm install -g node-gyp@latest

      - name: Clean node-gyp cache
        run: |
          Remove-Item -Recurse -Force "$env:LOCALAPPDATA\node-gyp\Cache" -ErrorAction SilentlyContinue
        shell: pwsh

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\\node_modules
          key: ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-cache-v2-

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCALAPPDATA }}\\electron\\Cache
          key: ${{ runner.os }}-electron-cache-v2-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Electron-Builder
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCALAPPDATA }}\\electron-builder\\cache
          key: ${{ runner.os }}-electron-builder-cache-v2-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile

      - name: Lint
        run: |
          yarn run lint
          yarn run validate-licenses

      - name: Run unit and E2E tests
        run: yarn run test

      - name: Build and release
        run: yarn run release:win --publish always

      - name: Calculate checksums
        run: |
          get-filehash -Algorithm SHA256 "build\\marktext-setup.exe"
          get-filehash -Algorithm SHA256 "build\\marktext-*-win.zip"
        shell: pwsh
