name: Release

on:
  push:
    branches:
      - 'release-v*'

jobs:
  windows:
    runs-on: windows-2019
    timeout-minutes: 45

    env:
      MARKTEXT_IS_STABLE: 1
      MARKTEXT_EXIT_ON_ERROR: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure setuptools and distutils
        run: python -m pip install --upgrade pip setuptools

      # Visual Studio Build Tools are pre-installed on windows-2019 runner

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Cache node_modules and Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}\node_modules
            ${{ github.workspace }}\.yarn
          key: ${{ runner.os }}-yarn-node_modules-v3-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node_modules-v3-

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCALAPPDATA }}\electron\Cache
          key: ${{ runner.os }}-electron-cache-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-v2-

      - name: Cache Electron-Builder
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCALAPPDATA }}\electron-builder\cache
          key: ${{ runner.os }}-electron-builder-cache-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-v2-

      - name: Set Yarn msvs_version to 2019
        run: yarn config set msvs_version 2019

      - name: Set GYP_MSVS_VERSION
        run: echo "GYP_MSVS_VERSION=2019" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Install latest node-gyp globally
        run: npm install -g node-gyp@latest

      - name: Install dependencies (ignore scripts)
        run: yarn install --check-files --frozen-lockfile --ignore-scripts

      - name: Set npm_config_* for Electron native builds
        run: |
          $electronVersion = node -p "require('./package.json').devDependencies?.electron || require('./package.json').dependencies?.electron"
          $electronVersion = $electronVersion.TrimStart('^~')
          echo "npm_config_target=$electronVersion" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "npm_config_arch=x64" | Out-File -FilePath $env:GITHUB_ENV -Append

      # ... rest of your build/release steps ...
